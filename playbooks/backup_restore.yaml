# code: language=Ansible insertSpaces=true tabSize=2

# ArgoCD - Backup and Restore
# Backup and restore ArgoCD to/from a file.


- hosts: argocd_cluster
  tasks:

    - name: Search ArgoCD server pod  # noqa risky-shell-pipe
      shell: |
        kubectl -n "{{ argocd_namespace }}" get pods | grep 'argocd-server-' | awk '{print $1}' | head -n 1
      changed_when: false
      register: _argocd_pod
      tags: [never, backup-local, backup-remote, restore]

    - name: Set facts
      set_fact:
        argocd_pod: "{{ argocd_pod | default(_argocd_pod.stdout) }}"
      changed_when: false
      tags: [never, backup-local, backup-remote, restore]

    # --- Backup ---

    - name: Export ArgoCD dump
      shell: |
        kubectl -n {{ argocd_namespace }} exec pod/{{ argocd_pod }} -- argocd-util export
      register: _argocd_yaml
      changed_when: false
      tags:
        [never, backup-local, backup-remote]

    - name: Save ArgoCD dump
      copy:
        content: "{{ _argocd_yaml.stdout }}"
        dest: "{{ argocd_dump | default(lookup('env', 'PWD') + '/' + 'argocd.yaml') }}"
        mode: 0644
      delegate_to: localhost
      tags: [never, backup-local]


- hosts: backup_servers
  tasks:

    - name: Export backup
      copy:
        content: "{{ hostvars[item]._argocd_yaml.stdout }}"
        dest: "{{ hostvars[item].argocd_backup_directory }}/argocd.{{ ansible_date_time.iso8601 }}.yml"
        mode: 0644
      loop: "{{ groups['argocd_cluster'] }}"
      tags: [never, backup-remote]
